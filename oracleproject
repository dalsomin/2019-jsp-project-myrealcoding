
select * from t_ev_cate;
 SELECT count(*)
            FROM t_detail
            WHERE t_ev_mem_id = 1000
            AND  t_cate_id not like '%v' and t_cate_id like '%b%' ;
--------
CREATE OR REPLACE TRIGGER tri_control_u
    BEFORE
    INSERT OR UPDATE ON t_detail
    FOR EACH ROW --행 트리거 사용
DECLARE
    vhbmcnt NUMBER;
    vbmcnt NUMBER;
    vhgap number ;--업데이트된 심각비매너와 원래 심각비매너의 차이
    vbgap number;--업데이트된 그냥비매너와 원래 그냥비매너의 차이

BEGIN
    IF INSERTING OR UPDATING THEN
        IF(:new.t_cate_id LIKE '%v%') THEN
            SELECT COUNT(*)
                INTO vhbmcnt
            FROM t_detail
            WHERE t_ev_mem_id = :new.t_ev_mem_id AND t_cate_id LIKE '%v';
            vhbmcnt := vhbmcnt+1;
                
        elsiF(:new.t_cate_id LIKE '%b%') THEN
                SELECT COUNT(*)
                INTO vbmcnt
            FROM t_detail
            WHERE t_ev_mem_id = :new.t_ev_mem_id and  t_cate_id  like '%b%' ;
            vbmcnt := vbmcnt+1;
        END IF;
    
        UPDATE control
        SET h_bm = vhbmcnt, bm = vbmcnt
        WHERE m_code = :new.t_ev_mem_id;
    END IF;

    dbms_output.put_line(vhgap);
    dbms_output.put_line(vbgap);

    SELECT h_bm, bm
        INTO vhgap, vbgap
    FROM control
    WHERE m_code = :new.t_ev_mem_id;
    

    dbms_output.put_line(vhgap || 'vhgap');
    dbms_output.put_line(vbgap || 'vhgap');
    
    dbms_output.put_line(:new.m_code || 'm_code');

    
    update m_ondo 
    set warnsum = nvl(warnsum, 0)+vhgap 
    where m_code = :new.m_code;
    
    update m_ondo 
    set warnsum =nvl(warnsum, 0)+(vbgap)*0.1 
    where m_code = :new.m_code;
    
END;
-------------------------------------------------------------------------------------
select * from m_ondo;
select * from t_re;

--오류고침!!!!!!!!!! 됨!!!
create or replace trigger tri_ondo_re
  after
  insert on t_re
  for each row
declare
begin
  if inserting then
    if (:new.big_cate_id= 2 )  and :new.t_re_nae is not null 
    then update m_ondo set t_re_s= t_re_s+1 where m_code=:new.m_code;
end if;
    if (:new.big_cate_id= 3 )  and :new.t_re_nae is not null 
    then update m_ondo set t_re_s= t_re_s+1 where m_code=:new.m_code;
end if;
end if;
end;
select * from m_ondo order by ondo_code;
-------------------------------------------------------------------------------------------------------------------t_detail 인서트되면 control update트리거
-------------------------------------------------------------------------------------------------------------------------------------<t_re_in 프로시저>
--t_re 테이블 인서트 프로시저 만들기
--delete from t_re where t_re_code =910; 
--select * from t_re;
--drop sequence re_seq;
--drop procedure t_re_in;

--1) 시퀀스 생성
create sequence re_seq
start with 910 ;
---------------------------------------------------------------------------------
--2)프로시저생성
create or replace procedure t_re_in
  (
  pb_code number    --게시물번호
  ,pm_code t_re.m_code%type  --회원번호
  ,pt_ev_id  t_re.t_ev_mem_id%type  -- 평가자회원번호
  ,pbig_cate_id number -- 빅카테
  ,pt_re_nae t_re.t_re_nae%type--후기내용
  )
is
--vdate date;
begin
--vdate := sysdate;
  insert into t_re (t_re_code,b_code,m_code,t_ev_mem_id, big_cate_id , t_re_date, t_re_nae )
  values (re_seq.nextval, pb_code,pm_code,pt_ev_id, pbig_cate_id , sysdate, pt_re_nae );
commit;
end;
--회원코드, 카테고리, 제목, 가격, 가격제시여부(1/0), 글내용, 지역범위
exec t_re_in( 5560 ,1002,1003,2,'사용법까지 알려주셨어요');
exec t_re_in( 5561 ,1003,1001,3,'친절하시고 덤으로 사과까지 주셨어요 ㅎㅎ');
exec t_re_in( 5561 ,1001,1003,3,'저희집쪽가지 와주셔서 감사했습니다.');
select * from t_re;
select* from m_ondo order by ondo_code;
delete from m_ondo;
delete from t_re where t_re_code>910;
-------------------------------------------------------------------------------------------------------------------------------------<u_re_in  프로시저>
select * from u_re;
--u_re 테이블 인서트 프로시저 만들기
--1) 시퀀스 생성
create sequence re_seq_u
start with 6 ;
--
delete from u_re where u_re_code=6;
drop sequence re_seq_u;
drop procedure u_re_in;
----------------------------------------------------------------------------
--2)프로시저생성
create or replace procedure u_re_in
  (
  pm_code u_re.m_code%type  --회원번호
  ,pu_re_nae u_re.u_re_nae%type--후기내용
  ,pu_ev_id  u_re.u_ev_mem_id%type  -- 평가자회원번호
  )
is
begin
  insert into u_re (u_re_code,u_re_date, m_code ,u_re_nae,u_ev_mem_id)
  values (re_seq_u.nextval, sysdate,pm_code, pu_re_nae, pu_ev_id);
commit;
end;
--회원코드, 카테고리, 제목, 가격, 가격제시여부(1/0), 글내용, 지역범위
exec u_re_in( 1003, '이사람이랑은 다시는 거래하고싶지 않네요ㅡㅡ ',1004);

select * from u_re order by u_re_code;
delete  from u_re where u_re_code>5;
commit;

------------------------------------------------------------------------------------------------------------------t_detail 인서트 프로시저
--거래상세평가 버튼 체크체크 하면 insert 되는 프로시저
delete from t_detail where t_detail_code >38;
select * from t_detail;
drop sequence detail_seq;
drop procedure p_detail_in;
--
--delete  from control;
--select * from control;
1)시퀀스만들기
create sequence detail_seq 
start with 38;
2)t_detail에 인서트하는 프로시저
create or replace procedure t_detail_in
  (
   pm_code t_detail.m_code%type  
  ,ptre_code  t_detail.t_re_code%type  
  ,ptev_id  t_detail.t_ev_mem_id%type  
  ,ptcate_id  t_detail.t_cate_id%type  
  )
is
begin
  insert into t_detail 
  values(detail_seq.nextval, pm_code,ptre_code,sysdate  ,ptev_id  ,ptcate_id );
commit;
end;

select * from control;
--2b6, 2b7, 2b8, 2b9 이렇게 선택할때 
exec p_detail_in(1001,910, 1000,'1b3v');
exec p_detail_in(1000,910, 1001,'2b7');
exec p_detail_in(1003,911, 1002,'2b8');
exec p_detail_in(1005,912, 1002,'2b9');
delete from t_detail where t_detail_code >=38;
select * from control order by control_id;
select * from t_detail order by t_detail_code;
drop trigger tri_control_t;
delete from control;
select* from t_ev_cate;
rollback;

-------------------------------------------------------------------------------------------------------------u_detail 인서트 프로시저
--drop sequence u_detail_seq;
--drop sequence u_seq;
--drop procedure u_detail_in;
--select * from u_detail;
delete from u_detail where u_detail_code >=405;
--1) u_detail_code에 넣을 시퀀스 & u_re_code 시퀀스생성
create sequence u_detail_seq 
start with 405;
create sequence u_seq
start with 7;
--2)u_detail에 인서트하는 프로시저 생성
create or replace procedure u_detail_in
  (
   pm_code u_detail.m_code%type  
  ,pre_code number
  ,puev_id  u_detail.u_ev_mem_id%type  
  ,pucate_id  u_detail.u_cate_id%type  
  )
is
begin
  insert into u_detail 
  values(u_detail_seq.nextval, pm_code,pre_code, sysdate,puev_id  ,pucate_id );
    
--    insert into u_detail 
--  values(u_detail_seq.nextval, 1003, 5, sysdate, 1003 , 'c2' );

commit;
end;
--
exec u_detail_in(1002, 5, 1000, 'c2' );

--=====================================================================================================================
select * from u_detail order by u_detail_code;
delete  from control;
select * from control;
select * from user_constraints where table_name = 'U_DETAIL';
--
alter table 
modify FK_U_CATE_TO_U_DETAIL 
desc u_detail_in;
desc u_detail;
select * from u_detail;
select * from control;

----------------------------------------------------------------------------------------------------<이용제재 테이블 쿼리>
desc control;
delete from control;
SELECT * FROM control;
--컬럼 4개만 있으면 바로 프로시저 만들러 아래로...
--컬럼 4개 아니고 더 많이 있으면 아래꺼 쿼리 4개 실행

alter table control drop column h_bm_warn;
alter table control drop column bm_warn ;
alter table control drop column warnsum;
alter table control drop column stop;

------------
desc control;
----쿼리 구조 4개만 남아있는지 확인
delete  from control;
create sequence control_seq;-----
drop sequence control_seq;------
--
drop procedure pro_control;
--------------------------------------------------------
create or replace procedure pro_control
  (  pmcode control.m_code%type  )
is
    vh_bm_t number;
    vh_bm_u number;
    vh_bm number;
    vbm_t number;
    vbm_u number;
    vbm number;
begin
---------------------심각비매너계산
  select count(*) 
  into vh_bm_t from t_detail where sysdate-t_re_date<365 and m_code=pmcode and t_cate_id like '%v' ;
  select count(*) 
  into vh_bm_u from u_detail where sysdate-u_re_date<365 and m_code=pmcode and u_cate_id like '%v' ;
vh_bm :=vh_bm_t + vh_bm_u;
----------------------그냥비매너 계산
  select count(*)
  into vbm_t 
  from t_detail where sysdate-t_re_date<365 and m_code=pmcode and t_cate_id like '%b%' and t_cate_id not like '%v';
  select count(*)
  into vbm_u 
  from t_detail where sysdate-t_re_date<365 and m_code=pmcode and t_cate_id like '%d%' and t_cate_id not like '%v';
vbm :=vbm_t+vbm_u;
insert into control (control_id, m_code, h_bm, bm)
values (control_seq.nextval, pmcode, vh_bm, vbm);
end;
-----------------------------------------------------------------
--프로시저 실행쿼리
declare 
begin
for i in 1000..1005
loop
     pro_control(i);
end loop;
end;
--
select * from control order by control_id;
delete from 
--
select * from t_detail;
------------------------------------------------------------------------------------------------------------------------------------------------매너온도 프로시저 
--매너온도프로시저 
select * from m_ondo;
delete from m_ondo;
--1)데이터타입 변경해주세요 필수!!! 
--데이터타입 변경안하면 프로시저 안돌아감 ㅠ
rollback;
desc m_ondo;
-----------------------데이터타입 number(2,1) 로 된것 있으면 아래실행!
alter table m_ondo modify p_tem number(3,1) ;
alter table m_ondo modify m_ondo number(3,1);
------------------------------마지막칼럼 필요없어서 날립니다~
alter table m_ondo 
drop column control_id;
--2)시퀀스만들기
create sequence seq_mondo;
drop sequence seq_mondo;
------------------------------------------------------------------------------
--select* from t_detail; 
--DELETE from m_ondo;
--drop procedure m_ondo_in;

--3)매너온도 프로시저생성
create or replace procedure m_ondo_in
(pmcode m_ondo.m_code%type)
is
vt_re_s number;
vt_cate_a number;
vt_cate_b number;
vt_cate_s number;
vu_cate_c number;
vu_cate_d number;
vu_cate_s number;
begin
--vt_re_s := (select count(*) from t_re where big_cate_id !=1 and t_re_nae is not null and m_code=pmcode)
  select count(*) 
      into vt_re_s
      from t_re where big_cate_id !=1 and t_re_nae is not null and m_code=pmcode;
  select count(*) 
      into vt_cate_a
      from t_detail where t_cate_id like '%a%' and m_code=pmcode and sysdate-t_re_date<365;
  select count(*) 
      into vt_cate_b
      from t_detail where t_cate_id like '%b%' and m_code=pmcode and sysdate-t_re_date<365;
vt_cate_s := vt_cate_a - vt_cate_b;
  select count(*)
    into vu_cate_c
    from u_detail where u_cate_id like '%c%' and m_code=pmcode and sysdate-u_re_date<365;
  select count(*) 
      into vu_cate_d
      from u_detail where u_cate_id like '%d%' and m_code=pmcode and sysdate-u_re_date<365;
vu_cate_s := vu_cate_c - vu_cate_d;
insert into m_ondo (ondo_code, m_code, p_tem, t_re_s,t_cate_s, u_cate_s)
 values (  seq_mondo.nextval, pmcode, 36.5,vt_re_s, vt_cate_s, vu_cate_s);
commit;
end;
------------------------------------------------------------------------------------
--매너온도테이블에 점수 인서트실행하는 쿼리

declare 
begin
for i in 1000..1005
loop
      m_ondo_in(i);
end loop;
end;
---------------------------------------------------------------------------------------------------------------ondo dbms출력/데이터 업데이트프로시저
select * from m_ondo order by ondo_code;
desc member;
--
create or replace procedure ondo-----------------ondo 삽입
(pmcode m_ondo.m_code%type)
is
vondo number;
begin
select  p_tem+(t_re_s)*0.5+(t_cate_s)*0.3+(u_cate_s)*0.1-nvl(warnsum,0)*(10)-nvl(stop,0)*(20)  
into vondo 
from m_ondo where m_code=pmcode;
--
dbms_output.put_line(pmcode||'번회원의 매너온도는--->'||vondo||'도');
--
update m_ondo
set m_ondo=vondo where m_code=pmcode;

commit;
end;
-------------------------------------------------------------------------------------------------------

----------------------------------온도값 인서트 실행 쿼리
exec ondo(1000);
--
declare 
begin
for i in 1000..1005
loop
      ondo(i);
end loop;
end;
--


drop trigger up_stop;
--delete  from m_ondo ;
select * from m_ondo ;
--=====================================================================================================================

create or replace procedure in_warnsum
(
pmcode m_ondo.m_code%type
)
is
vhsum number;
vbsum number;
vsum number;
begin
--
  select h_bm 
  into vhsum
  from control where m_code = pmcode;
  select bm*0.1
  into vbsum
  from control where m_code = pmcode;
vsum:=vhsum+vbsum;

  update m_ondo set warnsum=vsum;
if vsum >=2 then
  update m_ondo set stop = nvl(stop,0) +1;
end;
--
exec in_warnsum(1000);
declare 
begin
for i in 1000..1005
loop
      in_warnsum(i);
end loop;
end;
--
delete  from control;
select * from control;
select * from m_ondo order by ondo_code;

--m_ondo에 쓰인 select문
--select count(*) from t_re where big_cate_id !=1 and t_re_nae is not null and m_code=1000;
----
--select count(*) from t_detail where t_cate_id like '%b%' and m_code=1000;
--select count(*) from t_detail where t_cate_id like '%a%' and m_code=1000;
----
--select count(*) from u_detail where u_cate_id like '%c%' and m_code=1000;
--select count(*) from u_detail where u_cate_id like '%d%' and m_code=1000;
----
--select * from u_detail;
---
-----------------------------------------------------------------------
==========================================================================================


--칭찬 출력 트리거
--칭찬만 출력됨

CREATE OR REPLACE PROCEDURE get_tmannercnt(
    pmcode NUMBER
)
IS
    vnick VARCHAR2(50);
    vcate VARCHAR2(100);
    vcnt NUMBER(3);
BEGIN
    SELECT m_nickname 
        INTO vnick
    FROM member
    WHERE m_code = pmcode;
    
    dbms_output.put_line(vnick);
    FOR cur IN(
        SELECT te.t_cate_nae nae, COUNT(*) OVER (PARTITION BY td.t_cate_id, te.t_cate_nae) cnt
        FROM t_detail td
        JOIN t_ev_cate te ON td.t_cate_id = te.t_cate_id
        WHERE td.t_cate_id like '%a%' and td.m_code = 1004 
        ORDER BY td.t_cate_id;
        )
    LOOP
        dbms_output.put_line(' ' || cur.nae ||' :' || cur.cnt);
    END LOOP;
END;


exec get_tmannercnt(1000);
--
==========================================================================================







